"use strict";(self.webpackChunkrapid_hub=self.webpackChunkrapid_hub||[]).push([[3361],{2029:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/C4_Context_Diagram-26e4c01a50c01b9425bb503ca87b2bfc.svg"},2502:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"index","title":"RAPID2 Overview","description":"Introduction","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/rapid-hub/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/yunks128/rapid-hub/edit/main/docs/docs/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"RAPID2 Overview"},"sidebar":"docs","next":{"title":"Installation Guide","permalink":"/rapid-hub/docs/installation"}}');var r=i(4848),o=i(8453);const s={id:"index",title:"RAPID2 Overview"},a="RAPID2",l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Advancements from RAPID",id:"advancements-from-rapid",level:2},{value:"Scientific Background",id:"scientific-background",level:2},{value:"Installation",id:"installation",level:2},{value:"Context Diagram",id:"context-diagram",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rapid2",children:"RAPID2"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"RAPID2 (Routing Application for Python Integration of Discharge) is a next-generation hydrologic routing model designed for large-scale river network simulations. It builds on the RAPID framework, originally developed for parallel river flow computations, with enhanced scalability, usability, and integration with modern data formats."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hydrologic Routing"}),": Implements the Muskingum routing method with an optimized matrix-based formulation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Basin Analysis"}),": Supports hierarchical basin delineation and scalable computations for global river networks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connectivity Mapping"}),": Automates river reach linkage using spatial and topological data validation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NetCDF Integration"}),": Streamlined input/output handling for large-scale hydrologic simulations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python-Based Workflow"}),": Improved usability and extensibility for scientific and operational applications."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advancements-from-rapid",children:"Advancements from RAPID"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimized Performance"}),": RAPID2 improves computational efficiency, enabling faster routing over large networks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automated Network Processing"}),": Reduces manual preprocessing with built-in connectivity verification."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexible and Scalable"}),": Supports both regional and global hydrologic routing using modern datasets like MERIT-Hydro and NHDPlus."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Data Interoperability"}),": Direct integration with NetCDF-based inflows and hydrologic model outputs."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"scientific-background",children:"Scientific Background"}),"\n",(0,r.jsx)(n.p,{children:"RAPID2 builds upon the foundational work established in RAPID, which has been widely cited in hydrologic modeling studies. Key references include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"David et al. (2011)"})," \u2013 RAPID model introduction (",(0,r.jsx)(n.a,{href:"https://doi.org/10.1175/2011JHM1345.1",children:"DOI: 10.1175/2011JHM1345.1"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"David et al. (2011)"})," \u2013 Application in French hydrologic modeling (",(0,r.jsx)(n.a,{href:"https://doi.org/10.1002/hyp.8070",children:"DOI: 10.1002/hyp.8070"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"David et al. (2016)"})," \u2013 A decade of open-source RAPID development (",(0,r.jsx)(n.a,{href:"https://doi.org/10.1002/2015EA000142",children:"DOI: 10.1002/2015EA000142"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For datasets and further research, visit the ",(0,r.jsx)(n.a,{href:"https://orcid.org/0000-0002-0924-5907",children:"ORCID profile"})," or access ",(0,r.jsx)(n.a,{href:"https://doi.org/10.5281/zenodo.10013744",children:"Zenodo repositories"}),", (",(0,r.jsx)(n.a,{href:"https://doi.org/10.5281/zenodo.30228",children:"Zenodo 2"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["Follow the ",(0,r.jsx)(n.a,{href:"/rapid-hub/docs/installation",children:"Installation Guide"})," for setup instructions."]}),"\n",(0,r.jsx)(n.h2,{id:"context-diagram",children:"Context Diagram"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"RAPID2 Context Diagram",src:i(2029).A+"",width:"1443",height:"1318"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(6540);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);